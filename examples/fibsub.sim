<!--
	fibsub.sim

	Demonstrates how to a subroutine can return multiple values
-->

<subroutine name="fibonacci" arguments="iteration">
	local s1 equals 0
	local s2 equals 1
	local s3 equals 1
	local counter equals 3
	local result equals 0

	if $iteration equals 1
		return 0
	end

	if $iteration equals 2
		return 1
	end

	if $iteration equals 3
		return 1
	end

	while $counter less than $iteration
		counter equals "$counter+1"
		s1 equals $s2
		s2 equals $s3
		s3 equals "$s1+$s2"
	break

	return $s3

</subroutine>

<subroutine name="main">

	<!-- Calculate and display the 50th iteration of the sequence -->

	global fiftieth_iteration
	fiftieth_iteration equals fibonacci 50
	print $fiftieth_iteration

</subroutine>
